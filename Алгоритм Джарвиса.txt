import matplotlib.pyplot as plt


# Определяем направление поворота для троек точек
def orientation(p, q, r):
  val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1])
  if val == 0:
    return 0
  return 1 if val > 0 else -1

# Реализация алгоритма Джарвиса
def jarvis(points):

  plt.xlabel('x')
  plt.ylabel('y')
  plt.grid(linewidth=1)

  n = len(points)
  if n <= 2:
    return []

  hull = []
  l = 0

  for i in range(0, n):
    plt.scatter(points[i][0], points[i][1], color='red')
    if points[i][0] < points[l][0]:
      l = i
  p = l
  while True:
    hull.append(points[p])
    q = (p + 1) % n
    for i in range(n):
      if orientation(points[p], points[i], points[q]) == -1:
        q = i
    p = q
    if p == l:
      break

  hull.append(hull[0])
  x  = [val[0] for val in hull]
  y  = [val[1] for val in hull]

  plt.plot(x, y, color='blue')
  plt.show()

  return hull


#points = [(0, 3), (2, 2), (1, 1), (2, 1), (3, 0), (0, 0), (3, 3)]
points = []
for i in range(20):
  points.append((random.randint(0, 50), random.randint(0, 50)))

print("ТОЧКИ:")
for i in points:
  #plt.scatter(points[0][i], points[0][i], color='red')
  print(i)

print("ОБОЛОЧКА:")
result = jarvis(points)

print(result)






